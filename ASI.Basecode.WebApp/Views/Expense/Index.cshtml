@model IEnumerable<ASI.Basecode.Data.Models.Expense>

@section styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="~/css/style.css"/>
}

<div class="rounded-container">
    <div class="header">
        <h2>Expenses</h2>
    </div>
    <div class="fil">
        <form id="filterForm" method="get" asp-action="Index">
            <div class="row mb-4 catfilter">
                <div>
                    <label for="startDate">Start Date</label>
                    <input type="date" class="form-control" id="startDate" name="startDate" />
                </div>
                <div>
                    <label for="endDate">End Date</label>
                    <input type="date" class="form-control" id="endDate" name="endDate" />
                </div>
                <div>
                    <label for="category">Category</label>
                    <select class="form-control" id="category" name="category">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.CategoryID">@category.CategoryName</option>
                        }
                    </select>
                </div>
                <div>
                    <button type="submit" class="filt">Filter</button>
                </div>

                <a href="javascript:void(0);" class="add" data-toggle="modal" data-target="#addExpenseModal">+ Add Expense</a>
            </div>
        </form>
    </div>


    <div id="expenseList">

        @if (Model == null || !Model.Any())
        {
            <h5 class="font-weight-bold btn btn-warning">No Expenses Existing</h5>
        }
        else
        {
            <table class="expense">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Category</th>
                        <th>Title</th>
                        <th>Amount</th>                                               
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expense in Model)
                    {
                        <tr>
                            <td>@expense.Date.ToString("yyyy-MM-dd")</td>
                            <td>@(expense.Category != null ? expense.Category.CategoryName : "No Category")</td>
                            <td>@expense.Title</td>
                            <td>₱@expense.Amount</td>                
                            <td>@expense.Description</td>
                            <td>
                                <a asp-controller="Expense" asp-action="Edit" asp-route-id="@expense.ExpenseID">
                                    <i class="fas fa-edit" style="background-color: none;"></i> 
                                </a> |
                                <a href="@Url.Action("Delete", "Expense", new { id = expense.ExpenseID })"
                               
                                   onclick="return confirm('Do you wish to delete this Expense?');">
                                    <i class="fas fa-trash-alt" style="background-color: none; color:red;"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
   <div class="pagination">
    <!-- Previous Button -->
    <a href="javascript:void(0);" 
       onclick="loadPage(@(ViewBag.CurrentPage > 1 ? ViewBag.CurrentPage - 1 : 1))" 
       class="pagination-button @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
        &lt; Previous
    </a>

    <!-- Page Number Buttons -->
    @for (var i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.CurrentPage + 3, ViewBag.TotalPages); i++)
    {
        <a href="javascript:void(0);" 
           onclick="loadPage(@i)" 
           class="pagination-number @(i == ViewBag.CurrentPage ? "active" : "")">
            @i
        </a>
    }

    <!-- Next Button -->
    <a href="javascript:void(0);" 
       onclick="@(ViewBag.CurrentPage < ViewBag.TotalPages ? "loadPage(" + (ViewBag.CurrentPage + 1) + ")" : "return false;")" 
       class="pagination-button @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
        Next &gt;
    </a>
</div>





</div>
<div class="modal fade" id="addExpenseModal" tabindex="-1" role="dialog" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addExpenseModalLabel">Add Expense</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.Partial("Create", new ASI.Basecode.Data.Models.Expense())
            </div>
        </div>
    </div>
</div>

@section Scripts {
 
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // AJAX form submission
            $('#filterForm').on('submit', function (e) {
                e.preventDefault(); // Prevent default form submission

                var formData = $(this).serialize(); // Get form data

                $.ajax({
                    url: '@Url.Action("Index", "Expense")', 
                    type: 'GET',
                    data: formData, 
                    success: function (data) {
                        
                        $('#expenseList').html($(data).find('#expenseList').html());
                    },
                    error: function () {
                        alert('Error occurred while filtering expenses.');
                    }
                });
            });
        });
                function loadPage(pageNumber) {
        // Fetch values from the filter form
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();
        var category = $('#category').val();

        var formData = {
            startDate: startDate,
            endDate: endDate,
            category: category,
            pageNumber: pageNumber
        };

        $.ajax({
            url: '@Url.Action("Index", "Expense")',
            type: 'GET',
            data: formData,
            success: function (data) {
                // Update the expense list and pagination
                $('#expenseList').html($(data).find('#expenseList').html());
                $('.pagination').html($(data).find('.pagination').html());

                // Add active class to the current page
                $('.pagination-number').removeClass('active');
                $('.pagination-number').filter(function () {
                    return $(this).text() == pageNumber;
                }).addClass('active');
            },
            error: function () {
                alert('Error occurred while loading the page.');
            }
        });
    }

    </script>
}
