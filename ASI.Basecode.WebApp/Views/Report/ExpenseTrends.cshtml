@model ExpenseTrendViewModel
@using ASI.Basecode.WebApp.Models
@{
    ViewData["Title"] = "Expense Trends";
}
<div class="e-rounded-container">

    <div class="row" style="margin-top: 5%">
        <!-- Spending Over Time Chart -->
        <div class="chart-container col">
            <h4>Spending Over Time</h4>
            <canvas id="spendingOverTimeChart"></canvas>
        </div>

        <!-- Category Trends Chart -->
        <div class="chart-container col">
            <h4>Category Trends</h4>
            <canvas id="categoryTrendsChart"></canvas>
        </div>
    </div>

    <!-- Top Expense Titles Chart -->
    <div class="chart-container mt-4">
        <h4>Top Expense Titles</h4>
        <canvas id="topExpenseTitlesChart"></canvas>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Spending Over Time Chart
            const spendingLabels = @Html.Raw(Json.Serialize(Model.Months ?? new List<string>()));
            const spendingDatasets = @Html.Raw(Json.Serialize(Model.TrendData.Select(data => new
            {
                label = data.CategoryName,
                backgroundColor = "rgba(75, 192, 192, 0.2)",
                borderColor = "rgba(75, 192, 192, 1)",
                borderWidth = 2,
                pointBackgroundColor = "rgba(75, 192, 192, 1)",
                pointRadius = 5,
                fill = true,
                data = data.MonthlyAmounts
            })));


            const spendingCtx = document.getElementById("spendingOverTimeChart").getContext("2d");
            if (spendingCtx) {
                new Chart(spendingCtx, {
                    type: "line",
                    data: {
                        labels: spendingLabels,
                        datasets: spendingDatasets
                    },
                    options: {
                        responsive: true,
                        animation: { duration: 0 },
                        plugins: { legend: { display: true } },
                        scales: {
                            x: { title: { display: true, text: "Months" } },
                            y: { title: { display: true, text: "Amount" } }
                        }
                    }
                });
            }

            // Category Trends Chart
            const categoryLabels = @Html.Raw(Json.Serialize(Model.CategoryTrends.Select(c => c.CategoryName) ?? new List<string>()));
            const categoryData = @Html.Raw(Json.Serialize(Model.CategoryTrends.Select(c => c.TotalAmount)));

            const categoryCtx = document.getElementById("categoryTrendsChart").getContext("2d");
            if (categoryCtx) {
                new Chart(categoryCtx, {
                    type: "bar",
                    data: {
                        labels: categoryLabels,
                        datasets: [{
                            label: "Total Amount by Category",
                            data: categoryData,
                            backgroundColor: "rgba(153, 102, 255, 0.2)",
                            borderColor: "rgba(153, 102, 255, 1)",
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        animation: { duration: 0 }
                    }
                });
            }

            // Top Expense Titles Chart
            const topLabels = @Html.Raw(Json.Serialize(Model.TopExpenses.Select(e => e.Title) ?? new List<string>()));
            const topData = @Html.Raw(Json.Serialize(Model.TopExpenses.Select(e => e.Amount)));

            const topCtx = document.getElementById("topExpenseTitlesChart").getContext("2d");
            if (topCtx) {
                new Chart(topCtx, {
                    type: "bar",
                    data: {
                        labels: topLabels,
                        datasets: [{
                            label: "Top Expenses",
                            data: topData,
                            backgroundColor: "rgba(255, 159, 64, 0.2)",
                            borderColor: "rgba(255, 159, 64, 1)",
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        animation: { duration: 0 }
                    }
                });
            }
        });
    </script>
}


